name: Publish to Test PyPI
on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  publish-test-pypi:
    runs-on: ubuntu-latest
    environment:
      name: publish-test-pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install UV
        run: pip install uv
      - name: Install dependencies
        run: uv sync
      - name: Build wheels with UV
        run: uv build
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          print-hash: true

  ######################## TAG ########################
  tag:
    runs-on: ubuntu-22.04
    needs:
      - publish-test-pypi
    permissions:
      contents: write
    outputs:
      last_tag: ${{ steps.get-version.outputs.last_tag }}
      tag: ${{ steps.get-version.outputs.tag }}
    if: >-
      ${{
        github.event_name != 'release'
        && github.event.release.tag_name == null
        && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
          token: ${{ secrets.GH_RELEASE_PAT }}

      - name: Read version from pyproject.toml
        id: get-version
        run: |
          LAST_TAG=$(git ls-remote --tags origin | grep -o 'refs/tags/[^{}]*' | sed 's|refs/tags/||' | sort -V | tail -n 1)
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git tag ${{ steps.get-version.outputs.tag }}
          git push origin ${{ steps.get-version.outputs.tag }}


  release:
    runs-on: ubuntu-22.04
    needs:
      - publish-test-pypi
      - tag
    permissions:
      contents: write
    if: >-
      ${{
        github.event_name != 'release'
        && github.event.release.tag_name == null
        && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_PAT }}
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          release_name: ${{ needs.tag.outputs.tag }}
          body: |
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ needs.tag.outputs.last_tag }}...${{ needs.tag.outputs.tag }}
          draft: false
          prerelease: false
